{"name":"Reiniciar HC2","type":"virtual_device","properties":{"deviceIcon":1057,"currentIcon":"1057","log":"Memoria Libre: 41%","logTemp":"TxtGreen","mainLoop":"--[[HC2-Reboot\n\tDispositivo virtual\n\tmainLoop.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\nif not HC2 then\n  HC2 = Net.FHttp(\"127.0.0.1\", 11111)\nend\nwhile true do\n  response ,status, errorCode = HC2:GET(\"/api/diagnostics\")\n  local memoryFree = json.decode(response)['memory'].free\n  local memoryMin = tonumber(string.sub(fibaro:get(_selfId, \"ui.memoryLabel.value\"), 7, 8))\n    -- comprobar si la memoria está por debajo de ma memoria mínima\n  if memoryFree < memoryMin then\n    --si se ha definido un dispositivo para push, enviar mensaje\n    local pushId = fibaro:get(_selfId, \"ui.devLabel.value\")\n    pushId = string.sub(pushId, 1, string.find(pushId, '-') - 1)\n    if pushId ~= '' then\n      pushId = tonumber(pushId)\n      fibaro:call(pushId, 'sendPush', 'Memoria baja, reiniciando HC2')\n    end\n    -- reiniciar invocando el botón rebootButton\n    fibaro:call(_selfId, 'pressButton', '6')\n  end\n  memoryMin = string.format('%02d', memoryMin)\n  memoryFree = string.format('%02d',memoryFree)\n  fibaro:log('Memoria Libre: '..memoryFree..'%')\n  fibaro:call(_selfId, \"setProperty\", \"ui.memoryLabel.value\",\n    memoryFree..'% / '..memoryMin..'%')\n  fibaro:sleep(2000)\n  fibaro:log('')\nend\n","ui.devLabel.value":"573-\"LiNPhone\"","ui.memoryLabel.value":"41% / 04%","visible":"true","rows":[{"type":"label","elements":[{"id":1,"lua":false,"waitForResponse":false,"caption":"Memoria Act/Min","name":"memoryLabel","favourite":false,"main":true}]},{"type":"label","elements":[{"id":2,"lua":false,"waitForResponse":false,"caption":"Avisar a:","name":"devLabel","favourite":false,"main":false}]},{"type":"button","elements":[{"id":3,"lua":true,"waitForResponse":false,"caption":"◀  ","name":"downButton","empty":false,"msg":"--[[HC2-Reboot\n\tDispositivo virtual\n\tdownButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\nlocal _selfId = fibaro:getSelfId()\nlocal memoryString = fibaro:get(_selfId, \"ui.memoryLabel.value\")\nlocal memoryMin = tonumber(string.sub(memoryString, 7, 8))\nif memoryMin > 1 then\n  memoryMin = memoryMin - 1\nelse\n  memoryMin = 99\nend\nmemoryMin = string.format('%02d', memoryMin)\nmemoryString = string.sub(memoryString, 1, 6)..memoryMin..'%'\nfibaro:debug(memoryString)\nfibaro:call(_selfId, \"setProperty\", \"ui.memoryLabel.value\",\n    memoryString)\n","buttonIcon":1057,"favourite":false,"main":false},{"id":4,"lua":true,"waitForResponse":false,"caption":"▶","name":"upButton","empty":false,"msg":"--[[HC2-Reboot\n\tDispositivo virtual\n\tupButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\nlocal _selfId = fibaro:getSelfId()\nlocal memoryString = fibaro:get(_selfId, \"ui.memoryLabel.value\")\nlocal memoryMin = tonumber(string.sub(memoryString, 7, 8))\nif memoryMin < 99 then\n  memoryMin = memoryMin + 1\nelse\n  memoryMin = 1\nend\nmemoryMin = string.format('%02d', memoryMin)\nmemoryString = string.sub(memoryString, 1, 6)..memoryMin..'%'\nfibaro:debug(memoryString)\nfibaro:call(_selfId, \"setProperty\", \"ui.memoryLabel.value\",\n    memoryString)\n","buttonIcon":1057,"favourite":false,"main":false},{"id":5,"lua":true,"waitForResponse":false,"caption":"▼","name":"upDevButton","empty":false,"msg":"--[[HC2-Reboot\n\tDispositivo virtual\n\tupDevButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\n--[[----- CONFIGURACION AVANZADA ---------------------------------------------]]\nlocal _selfId = fibaro:getSelfId()  -- ID de este dispositivo virtual\n--[[----- FIN CONFIGURACION AVANZADA -----------------------------------------]]\n\nif not HC2 then\n  HC2 = Net.FHttp(\"127.0.0.1\", 11111)\nend\nresponse ,status, errorCode = HC2:GET(\"/api/devices?type=iOS_device\")\n\nlocal selectDev = fibaro:get(_selfId, \"ui.devLabel.value\")\nlocal myKey = 1\nlocal devs = json.decode(response)\ntable.insert(devs, {id = '', name = 'No avisar'})\nfor key, value in pairs(devs) do\n  if value.id..'-'..value.name == selectDev then\n      if key < #devs then myKey = key + 1 else myKey = 1 end\n    break\n  else\n    myKey = #devs\n  end\nend\nfibaro:call(_selfId, \"setProperty\", \"ui.devLabel.value\",\n devs[myKey].id..'-'..devs[myKey].name)\n","buttonIcon":1057,"favourite":false,"main":false},{"id":6,"lua":true,"waitForResponse":false,"caption":"⟲","name":"rebootButton","empty":false,"msg":"--[[HC2-Reboot\n\tDispositivo virtual\n\trebootButton.lua\n\tpor Manuel Pascual\n------------------------------------------------------------------------------]]\n\nif not HC2 then\n  HC2 = Net.FHttp(\"127.0.0.1\", 11111)\nend\n\nHC2:POST('/api/settings/reboot', 'HTTP/1.1')\n","buttonIcon":1057,"favourite":false,"main":true}]}]},"actions":{"pressButton":1,"setSlider":2,"setProperty":2}}